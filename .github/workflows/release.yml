name: Release Build

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write

jobs:
  build:
    name: Build & Package
    runs-on: ubuntu-latest

    strategy:
      matrix:
        include:
          - goos: linux
            goarch: amd64
          - goos: linux
            goarch: arm64
          - goos: windows
            goarch: amd64
          - goos: windows
            goarch: arm64
          - goos: darwin
            goarch: amd64


    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.21'

      - name: Build binary
        env:
          GOOS: ${{ matrix.goos }}
          GOARCH: ${{ matrix.goarch }}
        run: |
          mkdir -p dist
          EXT=""
          if [ "$GOOS" = "windows" ]; then EXT=".exe"; fi
          BIN=httping-ng-$GOOS-$GOARCH$EXT
          go build -trimpath -ldflags="-s -w" -o $BIN ./cmd/httping
          
          # Package
          if [ "$GOOS" = "windows" ]; then
            zip dist/$BIN.zip $BIN
          else
            tar -czf dist/$BIN.tar.gz $BIN
          fi

      - name: Upload release assets
        uses: softprops/action-gh-release@v1
        with:
          files: dist/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
